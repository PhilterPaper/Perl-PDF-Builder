See also INFO/Changes-ver_2 for changes released for PDF::API2, and 
incorporated into PDF::Builder.
See also INFO/Changes_2018 for earlier version 3 release logs.

3.014     2019-01-15  (unreleased)

* consider: 3_examples.pl -step allow "skip" as entry, to bypass a long test
            coming up next (need to label what's coming up next).
* issue: why do *.pl show up as siblings to Builder.pm? something in
         PDFbuild.pl routine when it updates .pl file VERSIONs? It's not
         harmful, just slightly annoying.

    Makefile.PL, README, lib/PDF/Builder/Docs.pm
      Move "optional" libraries (modules), currently Graphics::TIFF and
      Image::PNG::Libpng, to "recommends" section in Makefile.PL. Your 
      installer MAY attempt to automatically install these as prerequisites. 
      If it does, and fails, no need to panic: they aren't vital to the 
      operation of PDF::Builder, and should NOT cause an overall installation
      failure! You are free to remove these optional libraries from your Perl
      installation if you do not plan to use them. More information is in 
      PDF::Builder::Docs. PDF::Builder is now expected to show up in CPAN's 
      listing of "Reverse dependencies" for these libraries.

    lib/PDF/Builder/Resource/Font/SynFont.pm, lib/PDF/Builder/Docs.pm,
      lib/PDF/Builder.pm, DEPRECATED, examples/021_synfonts, examples/README,
      examples/example.output
     Deprecate -slant option, replacing by -condense, for the option to
      condense or expand character widths in a synthetic font. Expand and 
      clarify documentation. 021_synfonts add a page of text showing all the 
      options in use together, and command-line type. There is still much to be 
      done to make synthetic fonts completely usable, and I am exploring some 
      alternatives. 

      Fonts are limited to single byte encoding (you may wish to select an 
      alternate plane as a font and run that through synfont()). A major 
      problem I have not been able to solve is the expansion of Latin alphabet 
      ligatures to multiletter capital strings (e.g., ffi to F+F+I) for 
      small-caps usage, as well as small-caps for things like "long s" which 
      are not in the base plane, because the ASCII letters do not appear to be 
      available in other planes.

    lib/PDF/Builder/Basic/PDF/File.pm
      [ref RT 106020 and RT 117210] add some tolerance for out-of-spec PDF 
      files. Initially this is permitting a comment between the PDF version
      number in the header and the EOL, and extra whitespace in the cross
      reference listing and some other wigglies (e.g., starting object 1, not
      0, 0 entries per subsection, lots of warnings). These files don't 
      strictly meet the PDF formatting spec, but many readers seem to tolerate 
      them (fix them up), so PDF::Builder should, too. Note that PDF::Builder 
      already is happy to read a Mac-style PDF using only CR for an EOL (one 
      byte, not the required two). 

      There is one more that I haven't added yet: there are reports of 
      sightings "in the wild" (e.g., RT 106020) of a PDF version header 
      followed by a comment followed by the first object (n 0 obj) before 
      encountering the first $cr. If I can come up with or obtain a "working" 
      PDF like this, I will look into adding tolerance code for it.

      For future consideration: save header comments (in-line and after header)
      for output at overall header. Should coordinate with being able to 
      specify a header comment (in .pl code) and possibly comments within 
      objects. Other out-of-spec conditions that most readers tolerate will be
      added over time.

    CONTRIBUTING, MANIFEST
      Add file (at CPAN's request) suggesting how best to contribute to 
      the project.

    examples/025_unifonts, 3_examples.pl, INFO/old/examples.bat
      The data used by 025_unifonts (attached PDF-J document) is encoded in 
      SJIS. This is invalid UTF-8 and caused the script to blow up. The fix is
      to inform Perl that the DATA being read is SJIS, so it can be encoded on
      the fly to UTF-8.

    INFO/Changes_2018, Changes, MANIFEST, lib/PDF/Builder.pm, README
      2019 copyright, archive 2018 changes.
      
(see INFO/Changes_2018 for earlier changes)
(see INFO/Changes-ver_2 for changes to PDF::API2 up through 2.033)
